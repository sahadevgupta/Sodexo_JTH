<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             prism:ViewModelLocator.AutowireViewModel="True"
             xmlns:converters="clr-namespace:Sodexo_JTH.Converters"
             x:Class="Sodexo_JTH.Views.PatientInformationPage"
             xmlns:controls="clr-namespace:Sodexo_JTH.Controls"
             xmlns:behaviors="clr-namespace:Sodexo_JTH.Behaviors"
             xmlns:staticFn="clr-namespace:Sodexo_JTH.Helpers"
             xmlns:local="clr-namespace:Sodexo_JTH.PopUpControl"
             xmlns:resources="clr-namespace:Sodexo_JTH.Resources"
             Padding="10"
             Visual="Material"
             x:Name="patientinfopage">
    
    
    <NavigationPage.TitleView>
        <Label Text="{x:Static resources:AppResources.pinameText}" HorizontalOptions="CenterAndExpand" VerticalOptions="Center" 
             BackgroundColor="{StaticResource My_Header_Color}" 
             FontSize="17"
               FontFamily="{StaticResource SansationRegular}"
             FontAttributes="Bold"
             TextColor="White" HorizontalTextAlignment="Center" />
        
        
    </NavigationPage.TitleView>


    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:BoolToObjectConverter x:Key="BoolToObjectConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout>
        
        <StackLayout AbsoluteLayout.LayoutBounds="0,0,1,1"
            AbsoluteLayout.LayoutFlags="All">

            <StackLayout.Triggers>
                <DataTrigger TargetType="StackLayout" Binding="{Binding IsPageEnabled}"
                             Value="true">
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>
            </StackLayout.Triggers>

            <local:ConnectionView/>

            <ScrollView >
            <StackLayout>

                <StackLayout Orientation="Horizontal">
                        <Image x:Name="sss" Source="{converters:PlatformImage SourceImage='logoinnertouch2order.png'}" HorizontalOptions="Start" HeightRequest="60" />
                        <Image  HorizontalOptions="EndAndExpand" Source="{converters:PlatformImage SourceImage='sodexologo.png'}" HeightRequest="60" />
                </StackLayout>
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>


                        <Grid.Resources>
                            <Style TargetType="Label">
                                <Setter Property="FontFamily" Value="{StaticResource SansationRegular}"/>
                            </Style>

                            <Style TargetType="Entry">
                                <Setter Property="FontFamily" Value="{StaticResource SansationRegular}"/>
                            </Style>

                            <Style TargetType="Picker">
                                <Setter Property="FontFamily" Value="{StaticResource SansationRegular}"/>
                            </Style>


                        </Grid.Resources>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.nmText}" Grid.Row="0" Grid.Column="0"/>
                        <Label Text="{Binding SelectedPatient.Patientname}" Grid.Row="0" Grid.Column="1"/>
                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.bclassText}" Grid.Row="0" Grid.Column="2"/>
                        <Label Text="{Binding SelectedPatient.Bed_Class_Name}" Grid.Row="0" Grid.Column="3"/>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.aeText}" Grid.Row="1" Grid.Column="0"/>
                        <Label Text="{Binding SelectedPatient.Patient_Age}" Grid.Row="1" Grid.Column="1"/>
                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.txtWardbedsText}" Grid.Row="1" Grid.Column="2"/>
                        <Label Text="{Binding SelectedPatient.ward_bed}" Grid.Row="1" Grid.Column="3"/>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.nricText}" Grid.Row="2" Grid.Column="0"/>
                        <Label Text="{Binding SelectedPatient.NRIC}" Grid.Row="2" Grid.Column="1"/>
                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.dosText}" Grid.Row="2" Grid.Column="2"/>
                        <Label Text="{Binding Source={x:Static staticFn:Library.KEY_ORDER_DATE}}" Grid.Row="2" Grid.Column="3"/>

                        <Label FontAttributes="Bold " Text="{x:Static resources:AppResources.adchText}" Grid.Row="3" Grid.Column="0"/>
                        <Label Text="{Binding SelectedPatient.Age_Name}" Grid.Row="3" Grid.Column="1"/>
                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.rcText}" Grid.Row="3" Grid.Column="2"/>
                        <Label Text="{Binding SelectedPatient.patient_race}" Grid.Row="3" Grid.Column="3"/>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.pserText}" VerticalOptions="Center" Grid.Row="4" Grid.Column="0"/>
                        <Entry Text="{Binding SelectedPatient.Preferredserver}" Grid.Row="4" MaxLength="50" Grid.Column="1">
                            <Entry.Behaviors>
                                <behaviors:SpecialCharValidationBehavior/>
                            </Entry.Behaviors>
                        </Entry>
                        <Label FontAttributes="Bold" VerticalOptions="CenterAndExpand" Text="{x:Static resources:AppResources.doccmnText}" Grid.Row="4" Grid.Column="2"/>
                        <Entry Text="{Binding SelectedPatient.Doctorcomment}" Grid.Row="4" MaxLength="200" Grid.Column="3">
                            <Entry.Behaviors>
                                <behaviors:SpecialCharValidationBehavior/>
                            </Entry.Behaviors>
                        </Entry>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.gcmnText}" VerticalOptions="Center" Grid.Row="5" Grid.Column="0"/>
                        <Entry Text="{Binding SelectedPatient.Generalcomment}" Grid.Row="5" MaxLength="200" Grid.Column="1">
                            <Entry.Behaviors>
                                <behaviors:SpecialCharValidationBehavior/>
                            </Entry.Behaviors>
                        </Entry>

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.faText}" VerticalOptions="Center" Grid.Row="5" Grid.Column="2"/>





                        <Entry Text="{Binding SelectedPatient.allergy}" IsReadOnly="True" BackgroundColor="Transparent" Grid.Row="5"  Grid.Column="3"/>





                        <Label FontAttributes="Bold" VerticalOptions="Center" 
                               Text="{x:Static resources:AppResources.vnText}" Grid.Row="6" Grid.Column="0"/>
                        <Picker Grid.Row="6" Grid.Column="1" 
                            SelectedItem="{Binding SelectedPatient.isveg,Converter={StaticResource BoolToObjectConverter}, ConverterParameter=VegNVeg}">
                            <Picker.Items>
                                <x:String>Veg</x:String>
                                <x:String>Non-Veg</x:String>
                            </Picker.Items>

                            <Picker.Triggers>
                                <DataTrigger TargetType="Picker"
                                             Binding="{Binding Source={x:Static staticFn:Library.KEY_USER_ROLE}}"
                                             Value="FSA">
                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>
                            </Picker.Triggers>
                            
                        </Picker>
                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.hlnlText}" VerticalOptions="Center"  Grid.Row="6" Grid.Column="2"/>
                        <Picker Grid.Row="6" Grid.Column="3" SelectedItem="{Binding SelectedPatient.ishalal,Converter={StaticResource BoolToObjectConverter}, ConverterParameter=HNH}">
                            <Picker.Items>
                                <x:String>Halal</x:String>
                                <x:String>Non-Halal</x:String>
                            </Picker.Items>
                            <Picker.Triggers>
                                <DataTrigger TargetType="Picker"
                                             Binding="{Binding Source={x:Static staticFn:Library.KEY_USER_ROLE}}"
                                             Value="FSA">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Picker.Triggers>
                        </Picker>


                        <StackLayout Orientation="Horizontal" Grid.Row="7" Grid.Column="0">
                            <CheckBox  x:Name="chkdiabetic" WidthRequest="30">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Property="Color" Value="Black"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="IsChecked">
                                            <VisualState.Setters>
                                                <Setter Property="Color" Value="Accent"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        
                                        
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </CheckBox>
                            <Label VerticalTextAlignment="Center" FontSize="18" 
                                   Text="{x:Static resources:AppResources.txtdiaContent}"/>

                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout"
                                             Binding="{Binding Source={x:Static staticFn:Library.KEY_USER_ROLE}}"
                                             Value="FSA">
                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>
                            </StackLayout.Triggers>

                        </StackLayout>

                        <StackLayout Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                            <CheckBox x:Name="confine" WidthRequest="30" IsChecked="{Binding IsConfinement}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>

                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Property="Color" Value="Black"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="IsChecked">
                                            <VisualState.Setters>
                                                <Setter Property="Color" Value="Accent"/>
                                            </VisualState.Setters>
                                        </VisualState>



                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </CheckBox>
                            <Label VerticalTextAlignment="Center" FontSize="18" 
                                   Text="{x:Static resources:AppResources.cnfContent} "/>
                        </StackLayout>

                       

                        <Label FontAttributes="Bold" Text="{x:Static resources:AppResources.DTText}" VerticalOptions="Center" Grid.Row="7" Grid.Column="2"/>
                        <Picker Grid.Row="7" Grid.Column="3" SelectedIndex="0" SelectedItem="{Binding IsDisposable,Converter={StaticResource BoolToObjectConverter}, ConverterParameter=Disposable}">
                            <Picker.Items>
                                <x:String>No</x:String>
                                <x:String>Yes</x:String>
                            </Picker.Items>
                        </Picker>


                    </Grid>

                    <Label x:Name="fa" x:Uid="fa"  Margin="0,10,0,0" 
                  Text="{x:Static resources:AppResources.faText}" 
                  FontSize="18" 
                  FontFamily="{StaticResource SansationRegular}"
                  TextColor="White" 
                  VerticalTextAlignment="Center"
                  HeightRequest="30"
                  BackgroundColor="{StaticResource My_Header_Color}"
                  HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center"
                  />

                    
                
                    <FlexLayout Wrap="Wrap" Opacity="1" Direction="Row" FlexLayout.Grow="1"
                    BindableLayout.ItemsSource="{Binding Allergies,Mode=OneWay}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout Spacing="10" Orientation="Horizontal" VerticalOptions="Center"
                            MinimumHeightRequest="40"
                            FlexLayout.Basis="33%" >

                                    <CheckBox WidthRequest="30" IsChecked="{Binding IsChecked}" >
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup>

                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Black"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="IsChecked">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Accent"/>
                                                    </VisualState.Setters>
                                                </VisualState>



                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </CheckBox>
                                    <Label Text="{Binding allergies_name}" VerticalTextAlignment="Center" FontFamily="{StaticResource SansationRegular}"/>
                                  
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </FlexLayout>

                    <Label Margin="0,10,0,0" 
                  Text="{x:Static resources:AppResources.thText}" 
                  FontSize="18" 
                  FontFamily="{StaticResource SansationRegular}"
                  TextColor="White" 
                  VerticalTextAlignment="Center"
                  HeightRequest="30"
                  BackgroundColor="{StaticResource My_Header_Color}"
                  HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center"
                  >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <FlexLayout Wrap="Wrap" Direction="Row" FlexLayout.Grow="1"
                    BindableLayout.ItemsSource="{Binding Therapeutics,Mode=OneWay}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout Spacing="10" Orientation="Horizontal"
                                             VerticalOptions="Center"
                                             MinimumHeightRequest="40"
                                             FlexLayout.Basis="33%" >

                                    <CheckBox WidthRequest="30" IsChecked="{Binding IsChecked}" >
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup>

                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Black"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="IsChecked">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Accent"/>
                                                    </VisualState.Setters>
                                                </VisualState>



                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </CheckBox>
                                    <Label Text="{Binding TH_code}" VerticalTextAlignment="Center" FontFamily="{StaticResource SansationRegular}"/>
                                   
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                        <FlexLayout.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </FlexLayout.Triggers>
                    </FlexLayout>


                    <Label Margin="0,10,0,0" 
                  Text="{x:Static resources:AppResources.ctText}" 
                  FontSize="18" 
                  FontFamily="{StaticResource SansationRegular}"
                  TextColor="White" 
                  VerticalTextAlignment="Center"
                  HeightRequest="30"
                  BackgroundColor="{StaticResource My_Header_Color}"
                  HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <FlexLayout Wrap="Wrap" Direction="Row" FlexLayout.Grow="1"
                    BindableLayout.ItemsSource="{Binding Cuisines,Mode=OneWay}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout Orientation="Horizontal" Spacing="10"
                                         MinimumHeightRequest="40" VerticalOptions="Center"
                                         FlexLayout.Basis="33%" >

                                    <CheckBox WidthRequest="30" IsChecked="{Binding IsChecked}" >
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup>

                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Black"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="IsChecked">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Accent"/>
                                                    </VisualState.Setters>
                                                </VisualState>



                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </CheckBox>
                                    <Label Text="{Binding meal_type_name}" VerticalTextAlignment="Center" FontFamily="{StaticResource SansationRegular}"/>
                                    
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                        <FlexLayout.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </FlexLayout.Triggers>
                    </FlexLayout>

                    <Label x:Name="tblkingredietns" x:Uid="ie"  Margin="0,10,0,0" 
                  Text="{x:Static resources:AppResources.ieText}" 
                  FontSize="18" 
                  FontFamily="{StaticResource SansationRegular}"
                  TextColor="White" 
                  VerticalTextAlignment="Center"
                  HeightRequest="30"
                  BackgroundColor="{StaticResource My_Header_Color}"
                  HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center"
                  >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <FlexLayout Wrap="Wrap" Direction="Row" FlexLayout.Grow="1"
                    BindableLayout.ItemsSource="{Binding Ingredients,Mode=OneWay}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout Spacing="10" VerticalOptions="Center"
                                             Orientation="Horizontal"
                            MinimumHeightRequest="40"
                            FlexLayout.Basis="33%" >

                                    <CheckBox WidthRequest="30" IsChecked="{Binding IsChecked}" >
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup>

                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Black"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="IsChecked">
                                                    <VisualState.Setters>
                                                        <Setter Property="Color" Value="Accent"/>
                                                    </VisualState.Setters>
                                                </VisualState>



                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </CheckBox>
                                    <Label Text="{Binding ingredient_name}" VerticalTextAlignment="Center" FontFamily="{StaticResource SansationRegular}"/>


                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                        <FlexLayout.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </FlexLayout.Triggers>
                    </FlexLayout>



                    <Label x:Name="tblkothers" x:Uid="ot" Margin="0,10,0,0" 
                  Text="{x:Static resources:AppResources.oteText}" 
                  FontSize="18" 
                  FontFamily="{StaticResource SansationRegular}"
                  TextColor="White" 
                  VerticalTextAlignment="Center"
                  HeightRequest="30"
                  BackgroundColor="{StaticResource My_Header_Color}"
                  HorizontalOptions="FillAndExpand"
                    HorizontalTextAlignment="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <FlexLayout Wrap="Wrap" Direction="Row" FlexLayout.Grow="1" x:Name="others"
                    
                    BindableLayout.ItemsSource="{Binding OthersRadio,Mode=OneWay}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                                <StackLayout Spacing="10" VerticalOptions="Center"
                            MinimumHeightRequest="40"
                             FlexLayout.Basis="25%" >

                                    <!--<RadioButton x:Name="othersradbtn" GroupName="OTHERS" TextColor="Red"  Text="{Binding others_name}"  IsChecked="{Binding IsChecked}"/>-->
                                    <controls:RadioButton x:Name="othersradbtn"  Text="{Binding others_name}"  Checked="{Binding IsChecked}"/>

                            </StackLayout>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                        <FlexLayout.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </FlexLayout.Triggers>
                        
                </FlexLayout>

                    <FlexLayout Wrap="Wrap" Direction="Row" FlexLayout.Grow="1"
                    
                    BindableLayout.ItemsSource="{Binding OthersChecBox,Mode=OneWay}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <StackLayout Spacing="10"
                            MinimumHeightRequest="40">

                                    <StackLayout Orientation="Horizontal" IsEnabled="{Binding BindingContext.IsNoMealEnable,Source={x:Reference patientinfopage}}">

                                        <CheckBox WidthRequest="30" IsChecked="{Binding IsChecked}" >
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>

                                                    <VisualState x:Name="Normal">
                                                        <VisualState.Setters>
                                                            <Setter Property="Color" Value="Black"/>
                                                        </VisualState.Setters>
                                                    </VisualState>

                                                    <VisualState x:Name="IsChecked">
                                                        <VisualState.Setters>
                                                            <Setter Property="Color" Value="Accent"/>
                                                        </VisualState.Setters>
                                                    </VisualState>



                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </CheckBox>
                                        <Label Text="{Binding others_name}" VerticalTextAlignment="Center" FontFamily="{StaticResource SansationRegular}"/>
                                    </StackLayout>

                                    
                                </StackLayout>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                        <FlexLayout.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>


                        </FlexLayout.Triggers>
                    </FlexLayout>

            </StackLayout>
            </ScrollView>
            <Button Text="{x:Static resources:AppResources.nxContent}" Margin="0,10,0,0"
                    CornerRadius="5"
                    HeightRequest="60"
                    x:Name="NxtBtn"
                    BackgroundColor="{StaticResource My_Button_Color}"
                    TextColor="White"
                    FontSize="Medium"
                    Command="{Binding NextCommand}"
                    CommandParameter="{Binding Source={x:Reference NxtBtn},Path=Text}"
                    FontFamily="{StaticResource SansationRegular}"
                    HorizontalOptions="FillAndExpand">
                <Button.Triggers>
                    <DataTrigger TargetType="Button"
                                         Binding="{Binding Source={x:Reference chkdiabetic},Path=IsChecked}"
                                         Value="true">
                        <Setter Property="Text" Value="{x:Static resources:AppResources.btnupdateContent}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </StackLayout>

        <StackLayout x:Name="loadingStack" AbsoluteLayout.LayoutBounds="0.5,0.5,1,1"
                     VerticalOptions="CenterAndExpand"
                     HorizontalOptions="CenterAndExpand"
            AbsoluteLayout.LayoutFlags="All" IsVisible="False">


            <StackLayout.Triggers>
                <DataTrigger TargetType="StackLayout"
                             Binding="{Binding IsPageEnabled}"
                             Value="true">
                    <Setter Property="IsVisible" Value="True"/>
                    <Setter Property="Opacity" Value="0.7"/>
                </DataTrigger>
            </StackLayout.Triggers>

            <ActivityIndicator Color="Accent" x:Name="ProgressB"  IsRunning="False">
                <ActivityIndicator.Triggers>
                    <DataTrigger TargetType="ActivityIndicator"
                                 Binding="{Binding Source={x:Reference loadingStack},Path=IsVisible}"
                                 Value="true">
                        <Setter Property="IsRunning" Value="True"/>
                    </DataTrigger>
                </ActivityIndicator.Triggers>
            </ActivityIndicator>

            <Label Text="Loading..." FontSize="Title"
                   IsVisible="{Binding IsVisible,Source={x:Reference ProgressB}}" 
                   TextColor="Black" HorizontalOptions="CenterAndExpand" VerticalOptions="Center"/>
        </StackLayout>


    </AbsoluteLayout>
    
</ContentPage>